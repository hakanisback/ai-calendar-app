# GitHub Actions workflow to build and deploy the Next.js application to a VPS

name: Deploy to VPS

# This workflow runs on any push to the 'main' branch
on:
  push:
    branches:
      - main

jobs:
  deploy:
    # Use the latest version of Ubuntu as the runner
    runs-on: ubuntu-latest

    steps:
      # 1. Check out the repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Set up the Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Use a recent LTS version of Node.js
          cache: 'npm' # Cache npm packages to speed up future builds

      # 3. Install project dependencies
      - name: Install dependencies
        run: npm ci

      # 4. Create Google Cloud credentials file
      - name: Create GCP Credentials File
        run: echo "${{ secrets.GCP_CREDENTIALS_JSON }}" > gcp-credentials.json

      # 5. Create Firebase credentials file for the build
      - name: Create Firebase Credentials File
        run: |
          cat <<EOF > ./firebase-credentials.json
          ${{ secrets.FIREBASE_SERVICE_ACCOUNT_JSON }}
          EOF

      # 6. Create .env.local file for the build
      - name: Create .env.local
        run: |
          echo "GCP_CREDENTIALS_JSON='${{ secrets.GCP_CREDENTIALS_JSON }}'" > .env.local
          echo "GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }}" >> .env.local
          echo "NEXT_PUBLIC_GOOGLE_PROJECT_ID=${{ secrets.NEXT_PUBLIC_GOOGLE_PROJECT_ID }}" >> .env.local
          echo "GOOGLE_APPLICATION_CREDENTIALS=./gcp-credentials.json" >> .env.local
          echo "FIREBASE_CREDENTIALS_PATH=./firebase-credentials.json" >> .env.local
          echo "NEXT_PUBLIC_FIREBASE_API_KEY=${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}" >> .env.local
          echo "NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}" >> .env.local
          echo "NEXT_PUBLIC_FIREBASE_PROJECT_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}" >> .env.local
          echo "NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}" >> .env.local
          echo "NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}" >> .env.local
          echo "NEXT_PUBLIC_FIREBASE_APP_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}" >> .env.local
          echo "AUTH_SECRET=${{ secrets.AUTH_SECRET }}" >> .env.local

      # 7. Build the Next.js application
      - name: Build application
        run: npm run build

      # 6. Deploy the build files to the VPS using rsync for efficiency
      - name: Deploy to VPS
        uses: easingthemes/ssh-deploy@v5.0.0
        with:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          ARGS: "-rltgoDzvO --delete"
          SOURCE: ".next/"
          REMOTE_HOST: ${{ secrets.HOST }}
          REMOTE_USER: ${{ secrets.USERNAME }}
          TARGET: "/var/www/sirschedule.com/.next/"

      # 7. Install production dependencies and restart the app on the VPS
      - name: Copy ecosystem config file
        uses: appleboy/scp-action@v1.0.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "ecosystem.config.js"
          target: "/var/www/sirschedule.com"

      - name: Setup production environment and restart server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /var/www/sirschedule.com

            # Create the .env.local file for production. Next.js automatically loads this.
            cat <<EOF > ./.env.local
            AUTH_SECRET=${{ secrets.AUTH_SECRET }}
            FIREBASE_CREDENTIALS_PATH=/var/www/sirschedule.com/firebase-credentials.json
            # The rest of your environment variables...
            GCP_CREDENTIALS_JSON='${{ secrets.GCP_CREDENTIALS_JSON }}'
            GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }}
            NEXT_PUBLIC_GOOGLE_PROJECT_ID=${{ secrets.NEXT_PUBLIC_GOOGLE_PROJECT_ID }}
            GOOGLE_APPLICATION_CREDENTIALS=/var/www/sirschedule.com/gcp-credentials.json
            NEXT_PUBLIC_FIREBASE_API_KEY=${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
            NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
            NEXT_PUBLIC_FIREBASE_PROJECT_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
            NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
            NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
            NEXT_PUBLIC_FIREBASE_APP_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
            EOF

            # Create the Firebase credentials file from the secret
            cat <<EOF > ./firebase-credentials.json
            ${{ secrets.FIREBASE_SERVICE_ACCOUNT_JSON }}
            EOF

            # Install dependencies and restart with the ecosystem file
            npm install --production
            pm2 startOrRestart ecosystem.config.js --env production
