# GitHub Actions workflow to build and deploy the Next.js application to a VPS

name: Deploy to VPS

# This workflow runs on any push to the 'main' branch
on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to Production Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            set -e
            export PROJECT_DIR="/var/www/sirschedule.com"
            export GIT_REPO="https://github.com/hakanisback/ai-calendar-app.git"

            echo "### Checking if project directory exists... ###"
            if [ -d "$PROJECT_DIR/.git" ]; then
              echo "Directory is a git repository. Pulling latest changes."
              cd $PROJECT_DIR
              git pull origin main
            else
              echo "Directory is not a git repository. Re-cloning..."
              rm -rf $PROJECT_DIR
              git clone $GIT_REPO $PROJECT_DIR
              cd $PROJECT_DIR
            fi

            echo "### Creating environment files... ###"
            echo "Creating firebase-credentials.json..."
            echo "${{ secrets.FIREBASE_SERVICE_ACCOUNT_JSON }}" > firebase-credentials.json
            
            echo "Creating .env.local..."
            cat << EOF > .env.local
            AUTH_SECRET=${{ secrets.AUTH_SECRET }}
            GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
            GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
            NEXT_PUBLIC_FIREBASE_API_KEY=${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
            NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
            NEXT_PUBLIC_FIREBASE_PROJECT_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
            NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
            NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
            NEXT_PUBLIC_FIREBASE_APP_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
            FIREBASE_CREDENTIALS_PATH=/var/www/sirschedule.com/firebase-credentials.json
            EOF

            echo "### Installing dependencies... ###"
            npm install --production

            echo "### Building the application... ###"
            npm run build

            echo "### Reloading application with PM2... ###"
            if [ ! -f ecosystem.config.js ]; then
              echo "Creating basic ecosystem.config.js..."
              cat << ECF > ecosystem.config.js
              module.exports = {
                apps: [
                  {
                    name: 'ai-calendar',
                    script: 'node_modules/.bin/next',
                    args: 'start',
                    env_production: {
                      NODE_ENV: 'production'
                    }
                  }
                ]
              };
              ECF
              echo "Starting app with PM2..."
              pm2 start ecosystem.config.js --env production
            else
              echo "Reloading app with PM2..."
              pm2 reload ecosystem.config.js --env production
            fi

            echo "Deployment finished successfully!"
